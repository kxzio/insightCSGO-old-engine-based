#include "tickbase-exploits.h"
#include "../../helpers/math.hpp"


bool Tickbase::CanExploit(int tickbase_shift) {
	auto weapon = g_LocalPlayer->m_hActiveWeapon();

	if (!weapon) return false;

	const auto info = (weapon->GetCSWeaponData());

	if (!(info)) return false;

	float curtime = TICKS_TO_TIME(g_LocalPlayer->m_nTickBase() - tickbase_shift);

	if (curtime < g_LocalPlayer->m_flNextAttack())
		return false;

	if (curtime < weapon->m_flNextPrimaryAttack())
		return false;

	return true;
}

bool Tickbase::CanDoubleTap () {
	if (!g_Options.exploit_doubletap) return false;

	C_BaseCombatWeapon* m_pWeapon = g_LocalPlayer->m_hActiveWeapon().Get();
	if (!m_pWeapon || !m_pWeapon->CanShiftTickbase()) return false;

	if (m_pWeapon->m_Item().m_iItemDefinitionIndex() == 40 || m_pWeapon->m_Item().m_iItemDefinitionIndex() == 9) return false;

	return true;
}

void Tickbase::DoubleTap (CUserCmd * cmd) {
	
	if (!g_EngineClient->IsConnected() || !g_EngineClient->IsInGame()) return;
	if (!g_LocalPlayer || !g_LocalPlayer->IsAlive())                   return;
	static int DoubleTapTicks =  12; // like ev0vle

	
	if (!g_Options.exploit_doubletap || !cmd->buttons & IN_ATTACK) return;
	if (!Snakeware::bSendPacket) return;
	if (CanDoubleTap()) {
		if (CanExploit(DoubleTapTicks)&& GetAsyncKeyState(g_Options.exploit_doubletap_key)) {

			Snakeware::m_nTickbaseShift = DoubleTapTicks;
		}
	}
	else {
		Snakeware::m_nTickbaseShift = g_Options.exploit_hideshots ? 7 : 0;
	}
	
}